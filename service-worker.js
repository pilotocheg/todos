"use strict";var precacheConfig=[["/todos/android-icon-144x144.9d95014a.png","7743f7f9b265f46fa1ac4d8d0895744a"],["/todos/android-icon-192x192.49b10d4f.png","914a62976772c80a067c4f7708022d42"],["/todos/android-icon-36x36.c7364373.png","3769f41a8bd1fe6aa717bda693dca2cf"],["/todos/android-icon-48x48.e46d53c6.png","d4150472a7fd8498d20033705405586a"],["/todos/android-icon-72x72.d0763852.png","3a81acbe5f4531586104c08e6b3d71c5"],["/todos/android-icon-96x96.f78e0b09.png","cee978ac590f8d4d7119dac89fdf24e3"],["/todos/apple-icon-114x114.7bf07a6d.png","3f9947db87dc95e9868fe132c604ed9d"],["/todos/apple-icon-120x120.cf2fd9cc.png","b2bab62299cacc2ba14a759d6b10eb24"],["/todos/apple-icon-144x144.24e12773.png","7743f7f9b265f46fa1ac4d8d0895744a"],["/todos/apple-icon-152x152.a230f327.png","71c49bb6035109976e4ae25901377123"],["/todos/apple-icon-180x180.f725f976.png","629ecd5652dbc3cdffcddd50ba672473"],["/todos/apple-icon-57x57.a265785d.png","9005537bd5850d2d54780e637f7f6f77"],["/todos/apple-icon-60x60.096cd3d0.png","187636385e0e6f068fde3cbc19f97e9a"],["/todos/apple-icon-72x72.175c97c1.png","3a81acbe5f4531586104c08e6b3d71c5"],["/todos/apple-icon-76x76.93811f7d.png","ee254dc8f28f5b1aca6fa454b01c2142"],["/todos/favicon-16x16.418964cc.png","b6785f8940ac69f3fbd96414c3901774"],["/todos/favicon-32x32.fbe35d7c.png","80e55efcacd9aa765287e1493bc25e54"],["/todos/favicon-96x96.b6432723.png","cee978ac590f8d4d7119dac89fdf24e3"],["/todos/index.html","ebe008a7b9fda1577ce68b92900cc06f"],["/todos/ms-icon-144x144.486e23ec.png","7743f7f9b265f46fa1ac4d8d0895744a"],["/todos/src.4d73d296.js","17c58bf15a1a06143f86a291495a6c3e"],["/todos/styles.fcfedd39.css","d9d836e389ae4c2ff65d3e81ceb1488e"]],cacheName="sw-precache-v3-todos-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,t,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),n=urlsToCacheKeys.has(t));!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/todos/index.html",self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});