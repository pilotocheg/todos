"use strict";var precacheConfig=[["/todos/HelveticaNeue.40fa8686.ttf","5754a536be2476d2c8eaddb27fa300d2"],["/todos/android-icon-144x144.a69e6039.png","e6663935dd473ea5619b976faffacca9"],["/todos/android-icon-192x192.f7a942bf.png","9d84b25550abde2dd45c54cbf310408f"],["/todos/android-icon-36x36.509e73fd.png","778fea330bf8dc8978d31301c8e902e8"],["/todos/android-icon-48x48.a9e0478a.png","26b1ffeccd5369d7c8ff9bc990681c94"],["/todos/android-icon-72x72.b3db2da6.png","3c54f4458c66206140d64f069d017794"],["/todos/android-icon-96x96.1ad3134e.png","5b829c1b6b5d7a533e97f1bb4b354e3b"],["/todos/apple-icon-114x114.3e122d7d.png","d798c416c5e77c275a2b86a61ba653db"],["/todos/apple-icon-120x120.694fe6ba.png","103080a48dac55db707e427c53da983f"],["/todos/apple-icon-144x144.3f5068aa.png","e6663935dd473ea5619b976faffacca9"],["/todos/apple-icon-152x152.a9ddee69.png","3e386a7934cfcc8fb61884c06cab5306"],["/todos/apple-icon-180x180.dce0131d.png","75ff79391c3f1e371450d92ff8fc7b47"],["/todos/apple-icon-57x57.a4851be6.png","31f2eb5902bc60b059484b481a75738d"],["/todos/apple-icon-60x60.cc43a322.png","0a544b791b4b77b24b2a585217f9cc81"],["/todos/apple-icon-72x72.ab82aa29.png","3c54f4458c66206140d64f069d017794"],["/todos/apple-icon-76x76.c26405b8.png","0aa13fe47c1ec52f22e85f8cb2ff12e2"],["/todos/components.d86a9553.js","6b1e61a1e13d19c4eb58126cd867aa98"],["/todos/favicon-16x16.57a10303.png","aa5b9cddfa754f397b8e31d051de59d0"],["/todos/favicon-32x32.b53177da.png","e8aa3ff1ea485a2c6254adbf1a5a930e"],["/todos/favicon-96x96.2624b979.png","5b829c1b6b5d7a533e97f1bb4b354e3b"],["/todos/index.html","0c559d4355dc8c0e5efc91a35517a620"],["/todos/ms-icon-144x144.2bdf4274.png","e6663935dd473ea5619b976faffacca9"],["/todos/styles.f7edc0f2.css","e5cad5daef7fdb80f5ef7261c8717f29"]],cacheName="sw-precache-v3-todos-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,t,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),n=urlsToCacheKeys.has(t));!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/todos/index.html",self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});